// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OlympianSecurityHost.Data;

namespace OlympianSecurityHost.Migrations
{
    [DbContext(typeof(HostDbContext))]
    [Migration("20201004155044_tresspass_change")]
    partial class tresspass_change
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OlympianSecurityHost.Models.AlarmResponses.AlarmResponsesModel", b =>
                {
                    b.Property<long>("SysSerial")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionTaken")
                        .IsRequired();

                    b.Property<string>("AlarmType")
                        .IsRequired();

                    b.Property<string>("AlarmZone")
                        .IsRequired();

                    b.Property<DateTime>("Arrival");

                    b.Property<long>("ClientName");

                    b.Property<string>("Comments")
                        .IsRequired();

                    b.Property<DateTime>("DateReceived");

                    b.Property<DateTime>("Departure");

                    b.Property<string>("DispatchRequestType")
                        .IsRequired();

                    b.Property<string>("FirstDept")
                        .IsRequired();

                    b.Property<string>("KeyBox")
                        .IsRequired();

                    b.Property<string>("Keys")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Other")
                        .IsRequired();

                    b.Property<string>("OtherAlarmType")
                        .IsRequired();

                    b.Property<string>("PoliceServiceBadge")
                        .IsRequired();

                    b.Property<string>("ReportToClient")
                        .IsRequired();

                    b.Property<string>("RequestedBy")
                        .IsRequired();

                    b.Property<string>("ServiceCallNo")
                        .IsRequired();

                    b.Property<bool>("ServiceDispatched");

                    b.Property<string>("SiteAddress")
                        .IsRequired();

                    b.Property<bool>("Subscriber");

                    b.HasKey("SysSerial");

                    b.HasIndex("ClientName");

                    b.ToTable("AlarmResponses");
                });

            modelBuilder.Entity("OlympianSecurityHost.Models.GeneralOccurences.GeneralOccurencesModel", b =>
                {
                    b.Property<long>("SysSerial")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachmentCheck");

                    b.Property<byte[]>("Attachments");

                    b.Property<long>("ClientId");

                    b.Property<string>("ComplaintBy")
                        .IsRequired();

                    b.Property<DateTime>("DateInvestigated");

                    b.Property<DateTime>("DateMadeOut");

                    b.Property<DateTime>("DateReceived");

                    b.Property<DateTime>("DiaryDate");

                    b.Property<string>("InitialInvestigationBy")
                        .IsRequired();

                    b.Property<DateTime>("OccurenceDate");

                    b.Property<string>("OccurencePlace")
                        .IsRequired();

                    b.Property<string>("OccurenceType")
                        .IsRequired();

                    b.Property<bool>("OpenClosed");

                    b.Property<string>("PoliceDivision")
                        .IsRequired();

                    b.Property<string>("SiteAddress")
                        .IsRequired();

                    b.Property<string>("Synopsis")
                        .IsRequired();

                    b.HasKey("SysSerial");

                    b.HasIndex("ClientId");

                    b.ToTable("GeneralOccurences");
                });

            modelBuilder.Entity("OlympianSecurityHost.Models.ParkingEnforcements.ParkingEnforcementsModel", b =>
                {
                    b.Property<long>("SysSerial")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Arrival");

                    b.Property<string>("AttachmentCheck");

                    b.Property<byte[]>("Attachments");

                    b.Property<long>("ClientName");

                    b.Property<DateTime>("DateReceived");

                    b.Property<DateTime>("Departure");

                    b.Property<string>("Details")
                        .IsRequired();

                    b.Property<bool>("NoOfTags");

                    b.Property<string>("NoOfTows")
                        .IsRequired();

                    b.Property<string>("OccurencePlace")
                        .IsRequired();

                    b.Property<string>("PoliceDivision")
                        .IsRequired();

                    b.Property<string>("SiteAddress")
                        .IsRequired();

                    b.Property<string>("TowCompany");

                    b.Property<bool>("TowTrucksCalled");

                    b.Property<string>("TowedTo");

                    b.Property<string>("TruckLicense");

                    b.HasKey("SysSerial");

                    b.HasIndex("ClientName");

                    b.ToTable("ParkingEnforcements");
                });

            modelBuilder.Entity("OlympianSecurityHost.Models.SecurityLogs.SecurityLogsModel", b =>
                {
                    b.Property<long>("SysSerial")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClientId");

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("EndTime");

                    b.Property<string>("SiteAddress")
                        .IsRequired();

                    b.Property<DateTime>("StartTime");

                    b.Property<string>("TimeDetails")
                        .IsRequired();

                    b.HasKey("SysSerial");

                    b.HasIndex("ClientId");

                    b.ToTable("SecurityLogs");
                });

            modelBuilder.Entity("OlympianSecurityHost.Models.TressPassNotices.TressPassNoticesModel", b =>
                {
                    b.Property<long>("SysSerial")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<long>("ClientName");

                    b.Property<string>("Clothing")
                        .IsRequired();

                    b.Property<string>("Complexion")
                        .IsRequired();

                    b.Property<string>("Country")
                        .IsRequired();

                    b.Property<string>("DOB")
                        .IsRequired();

                    b.Property<DateTime>("Date");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("Gender")
                        .IsRequired();

                    b.Property<string>("Glasses")
                        .IsRequired();

                    b.Property<string>("HairColor")
                        .IsRequired();

                    b.Property<string>("HairLength")
                        .IsRequired();

                    b.Property<string>("Height")
                        .IsRequired();

                    b.Property<string>("Initial")
                        .IsRequired();

                    b.Property<DateTime>("IssuedAt");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Marks")
                        .IsRequired();

                    b.Property<DateTime>("PeriodOfTime");

                    b.Property<byte[]>("Photos")
                        .IsRequired();

                    b.Property<string>("PostalCode")
                        .IsRequired();

                    b.Property<string>("Province")
                        .IsRequired();

                    b.Property<string>("ReasonForNotice")
                        .IsRequired();

                    b.Property<string>("Tattoos")
                        .IsRequired();

                    b.Property<string>("TresspassOffence")
                        .IsRequired();

                    b.Property<string>("Weight")
                        .IsRequired();

                    b.HasKey("SysSerial");

                    b.HasIndex("ClientName");

                    b.ToTable("TressPassNotices");
                });

            modelBuilder.Entity("OlympianSecurityHost.Models.Users.UsersModel", b =>
                {
                    b.Property<long>("SysSerial")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Password")
                        .IsRequired();

                    b.Property<long>("RoleId");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("SysSerial");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OlympianSecurityHost.Models.Users.UsersRole", b =>
                {
                    b.Property<long>("SysSerial")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("SysSerial");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("OlympianSecurityHost.Models.AlarmResponses.AlarmResponsesModel", b =>
                {
                    b.HasOne("OlympianSecurityHost.Models.Users.UsersModel", "User")
                        .WithMany()
                        .HasForeignKey("ClientName")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OlympianSecurityHost.Models.GeneralOccurences.GeneralOccurencesModel", b =>
                {
                    b.HasOne("OlympianSecurityHost.Models.Users.UsersModel", "User")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OlympianSecurityHost.Models.ParkingEnforcements.ParkingEnforcementsModel", b =>
                {
                    b.HasOne("OlympianSecurityHost.Models.Users.UsersModel", "User")
                        .WithMany()
                        .HasForeignKey("ClientName")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OlympianSecurityHost.Models.SecurityLogs.SecurityLogsModel", b =>
                {
                    b.HasOne("OlympianSecurityHost.Models.Users.UsersModel", "User")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OlympianSecurityHost.Models.TressPassNotices.TressPassNoticesModel", b =>
                {
                    b.HasOne("OlympianSecurityHost.Models.Users.UsersModel", "User")
                        .WithMany()
                        .HasForeignKey("ClientName")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OlympianSecurityHost.Models.Users.UsersModel", b =>
                {
                    b.HasOne("OlympianSecurityHost.Models.Users.UsersRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
